---
import Product from '@/models/Product';
import ProductCard from '@/components/common/ProductCard.astro';
import User from '@/models/User';
import { getUserDataFromToken } from '@/utils/authGaurd';
import { populateVariantsAttributes } from '@/utils/pipeline';

let { currentProductId } = Astro.props;
console.log('ðŸš€ ~ currentProductId:', currentProductId);

let products = await Product.aggregate([
  {
    $match: {
      isPublished: {
        $ne: false,
      },
    },
  },

  ...populateVariantsAttributes(),

  {
    $project: {
      name: 1,
      slug: 1,
      logo: 1,
      price: 1,
      images: 1,
      salePrice: 1,
      isHomeDeliveryFree: 1,
      hasVariants: 1,
      variantsAttributes: 1,
      variants: 1,
      status: 1,
      isPublished: 1,
    },
  },
  {
    $limit: 11,
  },
  {
    $sort: {
      createdAt: -1,
    },
  },
]);

const userCookie = Astro.cookies.get('token')?.value;
let wishlist = [];

if (userCookie) {
  const user = await getUserDataFromToken(userCookie);
  const userWishlist = await User.findById(user?._id, 'wishlist');
  wishlist = userWishlist?.wishlist ?? [];
  wishlist = JSON.parse(JSON.stringify(wishlist));
}

products = products.map((product) => {
  let _idProduct = product._id.toString();
  let isWishlisted = wishlist.includes(_idProduct);
  return {
    ...product,
    isWishlisted: userCookie ? isWishlisted : false,
  };
});

products = products.filter(
  (product) => product._id.toString() !== currentProductId,
);
---

<h2 class="text-xl font-bold tracking-tight md:text-2xl lg:text-3xl">
  You might also like
</h2>

<div class="mt-4 grid grid-cols-2 gap-3">
  {
    products.map((product, index) => (
      <ProductCard
        key="featuredProduct"
        product={{
          _id: product._id,
          name: product.name,
          slug: product.slug,
          images: product.images,
          price: product.price,
          status: product.status,
          salePrice: product.salePrice,
          isHomeDeliveryFree: product.isHomeDeliveryFree,
          hasVariants: product.hasVariants,
          variants: product.variants,
          variantsAttributes: product.variantsAttributes,
        }}
      />
    ))
  }
</div>
