---
import Layout from '@/layouts/Layout.astro';
import { app } from '@/firebase/server.ts';
import { getAuth } from 'firebase-admin/auth';
import LoginWith from '@/components/common/LoginWith.astro';
const auth = getAuth(app);

let redirectUrl = Astro.url.searchParams.get('redirect') || '';
let msg = Astro.url.searchParams.get('msg') || '';
---

<Layout title="Login" header="Login">
  <div id="redirectUrl" class="hidden">{redirectUrl}</div>
  <div id="msg" class="hidden">{msg}</div>

  <div class="my-12 flex items-center justify-center">
    <div class="w-full max-w-sm rounded-lg border bg-white p-6 shadow-md">
      <div class="mt-6">
        <div class="mb-6">
          <h2 class="text-2xl font-bold text-gray-900">Login</h2>
          <p class="text-sm text-gray-600">
            Enter your email below to login to your account
          </p>
        </div>

        <form id="login-form" class="space-y-4">
          <div class="space-y-2">
            <label for="email" class="text-sm font-medium text-gray-700">
              Email
            </label>
            <input
              id="email"
              type="email"
              placeholder="m@example.com"
              required
              class="w-full rounded-md border border-gray-300 px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500"
            />
          </div>

          <div class="space-y-2">
            <div class="flex items-center justify-between">
              <label for="password" class="text-sm font-medium text-gray-700">
                Password
              </label>
              <a href="#" class="text-sm text-blue-600 hover:underline">
                Forgot your password?
              </a>
            </div>
            <div class="relative">
              <input
                id="password"
                type="password"
                required
                class="w-full rounded-md border border-gray-300 px-3 py-2 pr-10 focus:outline-none focus:ring-2 focus:ring-primary"
              />
              <button
                type="button"
                id="togglePassword"
                class="absolute inset-y-0 right-0 flex items-center px-3 text-gray-700"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke-width="1.5"
                  stroke="currentColor"
                  class="h-5 w-5"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M2.036 12.322a1.012 1.012 0 010-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178z"
                  >
                  </path>
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"
                  >
                  </path>
                </svg>
              </button>
            </div>
          </div>

          <button
            type="submit"
            class="w-full rounded-md border px-3 py-2 hover:bg-primary"
          >
            Login
          </button>
        </form>

        <p class="my-2 text-center text-sm text-gray-500">Or</p>

        <LoginWith />

        <div class="mt-6 text-center text-sm text-gray-600">
          Don't have an account?{' '}
          <a
            href={`/register${redirectUrl ? `?redirect=${redirectUrl}` : ''}`}
            class="text-blue-600 hover:underline"
          >
            Sign up
          </a>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  import { login } from '@/common/function';

  const loginForm = document.querySelector('#login-form');
  const msg = document.getElementById('msg').innerText;
  const redirectUrl = document.getElementById('redirectUrl').innerText;

  if (msg) {
    errorAlert(msg);
  }

  loginForm.addEventListener('submit', async (e) => {
    e.preventDefault();

    let email = document.querySelector('#email')?.value;
    let password = document.querySelector('#password')?.value;

    try {
      let { token, userData } = await login(email, password);
      localStorage.setItem('token', token);

      let role = userData.role;
      if (role === 'Admin' || role === 'SuperAdmin') {
        window.location.href = '/admin';
      } else {
        window.location.href = '/' + redirectUrl || '';
      }
    } catch (e) {
      errorAlert('Login failed. Please try again');
    }
  });
</script>

<script>
  // Password visibility toggle
  const togglePassword = document.querySelector('#togglePassword');
  const password = document.querySelector('#password');

  togglePassword.addEventListener('click', function () {
    const type =
      password.getAttribute('type') === 'password' ? 'text' : 'password';
    password.setAttribute('type', type);

    // Toggle the eye icon
    this.innerHTML =
      type === 'password'
        ? '<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5"><path stroke-linecap="round" stroke-linejoin="round" d="M2.036 12.322a1.012 1.012 0 010-.639C3.423 7.51 7.36 4.5 12 4.5c4.638 0 8.573 3.007 9.963 7.178.07.207.07.431 0 .639C20.577 16.49 16.64 19.5 12 19.5c-4.638 0-8.573-3.007-9.963-7.178z" /><path stroke-linecap="round" stroke-linejoin="round" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" /></svg>'
        : '<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-5 h-5"><path stroke-linecap="round" stroke-linejoin="round" d="M3.98 8.223A10.477 10.477 0 001.934 12C3.226 16.338 7.244 19.5 12 19.5c.993 0 1.953-.138 2.863-.395M6.228 6.228A10.45 10.45 0 0112 4.5c4.756 0 8.773 3.162 10.065 7.498a10.523 10.523 0 01-4.293 5.774M6.228 6.228L3 3m3.228 3.228l3.65 3.65m7.894 7.894L21 21m-3.228-3.228l-3.65-3.65m0 0a3 3 0 10-4.243-4.243m4.242 4.242L9.88 9.88" /></svg>';
  });
</script>
